/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddChunkToGroupData from './model/AddChunkToGroupData';
import ApiKeyDTO from './model/ApiKeyDTO';
import AuthQuery from './model/AuthQuery';
import BatchQueuedChunkResponse from './model/BatchQueuedChunkResponse';
import BookmarkData from './model/BookmarkData';
import BookmarkGroupResult from './model/BookmarkGroupResult';
import ChatMessageProxy from './model/ChatMessageProxy';
import ChunkData from './model/ChunkData';
import ChunkFilter from './model/ChunkFilter';
import ChunkGroup from './model/ChunkGroup';
import ChunkGroupAndFile from './model/ChunkGroupAndFile';
import ChunkMetadata from './model/ChunkMetadata';
import ChunkMetadataWithFileData from './model/ChunkMetadataWithFileData';
import ClientDatasetConfiguration from './model/ClientDatasetConfiguration';
import CreateBatchChunkData from './model/CreateBatchChunkData';
import CreateChunkData from './model/CreateChunkData';
import CreateChunkGroupData from './model/CreateChunkGroupData';
import CreateDatasetRequest from './model/CreateDatasetRequest';
import CreateMessageData from './model/CreateMessageData';
import CreateOrganizationData from './model/CreateOrganizationData';
import CreateTopicData from './model/CreateTopicData';
import Dataset from './model/Dataset';
import DatasetAndUsage from './model/DatasetAndUsage';
import DatasetDTO from './model/DatasetDTO';
import DatasetUsageCount from './model/DatasetUsageCount';
import DeleteDatasetRequest from './model/DeleteDatasetRequest';
import DeleteTopicData from './model/DeleteTopicData';
import DeleteUserApiKeyRequest from './model/DeleteUserApiKeyRequest';
import EditMessageData from './model/EditMessageData';
import ErrorResponseBody from './model/ErrorResponseBody';
import Event from './model/Event';
import EventReturn from './model/EventReturn';
import FieldCondition from './model/FieldCondition';
import File from './model/File';
import FileDTO from './model/FileDTO';
import GenerateChunksRequest from './model/GenerateChunksRequest';
import GetEventsData from './model/GetEventsData';
import GetGroupsForChunksData from './model/GetGroupsForChunksData';
import GroupData from './model/GroupData';
import GroupScoreChunkDTO from './model/GroupScoreChunkDTO';
import InvitationData from './model/InvitationData';
import MatchCondition from './model/MatchCondition';
import Message from './model/Message';
import Organization from './model/Organization';
import OrganizationUsageCount from './model/OrganizationUsageCount';
import Range from './model/Range';
import ReccomendGroupChunksRequest from './model/ReccomendGroupChunksRequest';
import RecommendChunksRequest from './model/RecommendChunksRequest';
import RegenerateMessageData from './model/RegenerateMessageData';
import ReturnQueuedChunk from './model/ReturnQueuedChunk';
import ScoreChunkDTO from './model/ScoreChunkDTO';
import SearchChunkData from './model/SearchChunkData';
import SearchChunkQueryResponseBody from './model/SearchChunkQueryResponseBody';
import SearchGroupsResult from './model/SearchGroupsResult';
import SearchOverGroupsData from './model/SearchOverGroupsData';
import SearchOverGroupsResponseBody from './model/SearchOverGroupsResponseBody';
import SearchWithinGroupData from './model/SearchWithinGroupData';
import SetUserApiKeyRequest from './model/SetUserApiKeyRequest';
import SetUserApiKeyResponse from './model/SetUserApiKeyResponse';
import SingleQueuedChunkResponse from './model/SingleQueuedChunkResponse';
import SlimGroup from './model/SlimGroup';
import SlimUser from './model/SlimUser';
import StripePlan from './model/StripePlan';
import SuggestedQueriesRequest from './model/SuggestedQueriesRequest';
import SuggestedQueriesResponse from './model/SuggestedQueriesResponse';
import Topic from './model/Topic';
import UpdateChunkByTrackingIdData from './model/UpdateChunkByTrackingIdData';
import UpdateChunkData from './model/UpdateChunkData';
import UpdateChunkGroupData from './model/UpdateChunkGroupData';
import UpdateDatasetRequest from './model/UpdateDatasetRequest';
import UpdateGroupByTrackingIDData from './model/UpdateGroupByTrackingIDData';
import UpdateOrganizationData from './model/UpdateOrganizationData';
import UpdateTopicData from './model/UpdateTopicData';
import UpdateUserData from './model/UpdateUserData';
import UploadFileData from './model/UploadFileData';
import UploadFileResult from './model/UploadFileResult';
import UserOrganization from './model/UserOrganization';
import AuthApi from './api/AuthApi';
import ChunkApi from './api/ChunkApi';
import ChunkGroupApi from './api/ChunkGroupApi';
import DatasetApi from './api/DatasetApi';
import EventsApi from './api/EventsApi';
import FileApi from './api/FileApi';
import HealthApi from './api/HealthApi';
import InvitationApi from './api/InvitationApi';
import MessageApi from './api/MessageApi';
import OrganizationApi from './api/OrganizationApi';
import StripeApi from './api/StripeApi';
import TopicApi from './api/TopicApi';
import UserApi from './api/UserApi';


/**
* JS and TS client for Trieve API generated from its OpenAPI specification using openapi-generator..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TrieveJsTsClient = require('index'); // See note below*.
* var xxxSvc = new TrieveJsTsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TrieveJsTsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TrieveJsTsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TrieveJsTsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.5.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddChunkToGroupData model constructor.
     * @property {module:model/AddChunkToGroupData}
     */
    AddChunkToGroupData,

    /**
     * The ApiKeyDTO model constructor.
     * @property {module:model/ApiKeyDTO}
     */
    ApiKeyDTO,

    /**
     * The AuthQuery model constructor.
     * @property {module:model/AuthQuery}
     */
    AuthQuery,

    /**
     * The BatchQueuedChunkResponse model constructor.
     * @property {module:model/BatchQueuedChunkResponse}
     */
    BatchQueuedChunkResponse,

    /**
     * The BookmarkData model constructor.
     * @property {module:model/BookmarkData}
     */
    BookmarkData,

    /**
     * The BookmarkGroupResult model constructor.
     * @property {module:model/BookmarkGroupResult}
     */
    BookmarkGroupResult,

    /**
     * The ChatMessageProxy model constructor.
     * @property {module:model/ChatMessageProxy}
     */
    ChatMessageProxy,

    /**
     * The ChunkData model constructor.
     * @property {module:model/ChunkData}
     */
    ChunkData,

    /**
     * The ChunkFilter model constructor.
     * @property {module:model/ChunkFilter}
     */
    ChunkFilter,

    /**
     * The ChunkGroup model constructor.
     * @property {module:model/ChunkGroup}
     */
    ChunkGroup,

    /**
     * The ChunkGroupAndFile model constructor.
     * @property {module:model/ChunkGroupAndFile}
     */
    ChunkGroupAndFile,

    /**
     * The ChunkMetadata model constructor.
     * @property {module:model/ChunkMetadata}
     */
    ChunkMetadata,

    /**
     * The ChunkMetadataWithFileData model constructor.
     * @property {module:model/ChunkMetadataWithFileData}
     */
    ChunkMetadataWithFileData,

    /**
     * The ClientDatasetConfiguration model constructor.
     * @property {module:model/ClientDatasetConfiguration}
     */
    ClientDatasetConfiguration,

    /**
     * The CreateBatchChunkData model constructor.
     * @property {module:model/CreateBatchChunkData}
     */
    CreateBatchChunkData,

    /**
     * The CreateChunkData model constructor.
     * @property {module:model/CreateChunkData}
     */
    CreateChunkData,

    /**
     * The CreateChunkGroupData model constructor.
     * @property {module:model/CreateChunkGroupData}
     */
    CreateChunkGroupData,

    /**
     * The CreateDatasetRequest model constructor.
     * @property {module:model/CreateDatasetRequest}
     */
    CreateDatasetRequest,

    /**
     * The CreateMessageData model constructor.
     * @property {module:model/CreateMessageData}
     */
    CreateMessageData,

    /**
     * The CreateOrganizationData model constructor.
     * @property {module:model/CreateOrganizationData}
     */
    CreateOrganizationData,

    /**
     * The CreateTopicData model constructor.
     * @property {module:model/CreateTopicData}
     */
    CreateTopicData,

    /**
     * The Dataset model constructor.
     * @property {module:model/Dataset}
     */
    Dataset,

    /**
     * The DatasetAndUsage model constructor.
     * @property {module:model/DatasetAndUsage}
     */
    DatasetAndUsage,

    /**
     * The DatasetDTO model constructor.
     * @property {module:model/DatasetDTO}
     */
    DatasetDTO,

    /**
     * The DatasetUsageCount model constructor.
     * @property {module:model/DatasetUsageCount}
     */
    DatasetUsageCount,

    /**
     * The DeleteDatasetRequest model constructor.
     * @property {module:model/DeleteDatasetRequest}
     */
    DeleteDatasetRequest,

    /**
     * The DeleteTopicData model constructor.
     * @property {module:model/DeleteTopicData}
     */
    DeleteTopicData,

    /**
     * The DeleteUserApiKeyRequest model constructor.
     * @property {module:model/DeleteUserApiKeyRequest}
     */
    DeleteUserApiKeyRequest,

    /**
     * The EditMessageData model constructor.
     * @property {module:model/EditMessageData}
     */
    EditMessageData,

    /**
     * The ErrorResponseBody model constructor.
     * @property {module:model/ErrorResponseBody}
     */
    ErrorResponseBody,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventReturn model constructor.
     * @property {module:model/EventReturn}
     */
    EventReturn,

    /**
     * The FieldCondition model constructor.
     * @property {module:model/FieldCondition}
     */
    FieldCondition,

    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File,

    /**
     * The FileDTO model constructor.
     * @property {module:model/FileDTO}
     */
    FileDTO,

    /**
     * The GenerateChunksRequest model constructor.
     * @property {module:model/GenerateChunksRequest}
     */
    GenerateChunksRequest,

    /**
     * The GetEventsData model constructor.
     * @property {module:model/GetEventsData}
     */
    GetEventsData,

    /**
     * The GetGroupsForChunksData model constructor.
     * @property {module:model/GetGroupsForChunksData}
     */
    GetGroupsForChunksData,

    /**
     * The GroupData model constructor.
     * @property {module:model/GroupData}
     */
    GroupData,

    /**
     * The GroupScoreChunkDTO model constructor.
     * @property {module:model/GroupScoreChunkDTO}
     */
    GroupScoreChunkDTO,

    /**
     * The InvitationData model constructor.
     * @property {module:model/InvitationData}
     */
    InvitationData,

    /**
     * The MatchCondition model constructor.
     * @property {module:model/MatchCondition}
     */
    MatchCondition,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The OrganizationUsageCount model constructor.
     * @property {module:model/OrganizationUsageCount}
     */
    OrganizationUsageCount,

    /**
     * The Range model constructor.
     * @property {module:model/Range}
     */
    Range,

    /**
     * The ReccomendGroupChunksRequest model constructor.
     * @property {module:model/ReccomendGroupChunksRequest}
     */
    ReccomendGroupChunksRequest,

    /**
     * The RecommendChunksRequest model constructor.
     * @property {module:model/RecommendChunksRequest}
     */
    RecommendChunksRequest,

    /**
     * The RegenerateMessageData model constructor.
     * @property {module:model/RegenerateMessageData}
     */
    RegenerateMessageData,

    /**
     * The ReturnQueuedChunk model constructor.
     * @property {module:model/ReturnQueuedChunk}
     */
    ReturnQueuedChunk,

    /**
     * The ScoreChunkDTO model constructor.
     * @property {module:model/ScoreChunkDTO}
     */
    ScoreChunkDTO,

    /**
     * The SearchChunkData model constructor.
     * @property {module:model/SearchChunkData}
     */
    SearchChunkData,

    /**
     * The SearchChunkQueryResponseBody model constructor.
     * @property {module:model/SearchChunkQueryResponseBody}
     */
    SearchChunkQueryResponseBody,

    /**
     * The SearchGroupsResult model constructor.
     * @property {module:model/SearchGroupsResult}
     */
    SearchGroupsResult,

    /**
     * The SearchOverGroupsData model constructor.
     * @property {module:model/SearchOverGroupsData}
     */
    SearchOverGroupsData,

    /**
     * The SearchOverGroupsResponseBody model constructor.
     * @property {module:model/SearchOverGroupsResponseBody}
     */
    SearchOverGroupsResponseBody,

    /**
     * The SearchWithinGroupData model constructor.
     * @property {module:model/SearchWithinGroupData}
     */
    SearchWithinGroupData,

    /**
     * The SetUserApiKeyRequest model constructor.
     * @property {module:model/SetUserApiKeyRequest}
     */
    SetUserApiKeyRequest,

    /**
     * The SetUserApiKeyResponse model constructor.
     * @property {module:model/SetUserApiKeyResponse}
     */
    SetUserApiKeyResponse,

    /**
     * The SingleQueuedChunkResponse model constructor.
     * @property {module:model/SingleQueuedChunkResponse}
     */
    SingleQueuedChunkResponse,

    /**
     * The SlimGroup model constructor.
     * @property {module:model/SlimGroup}
     */
    SlimGroup,

    /**
     * The SlimUser model constructor.
     * @property {module:model/SlimUser}
     */
    SlimUser,

    /**
     * The StripePlan model constructor.
     * @property {module:model/StripePlan}
     */
    StripePlan,

    /**
     * The SuggestedQueriesRequest model constructor.
     * @property {module:model/SuggestedQueriesRequest}
     */
    SuggestedQueriesRequest,

    /**
     * The SuggestedQueriesResponse model constructor.
     * @property {module:model/SuggestedQueriesResponse}
     */
    SuggestedQueriesResponse,

    /**
     * The Topic model constructor.
     * @property {module:model/Topic}
     */
    Topic,

    /**
     * The UpdateChunkByTrackingIdData model constructor.
     * @property {module:model/UpdateChunkByTrackingIdData}
     */
    UpdateChunkByTrackingIdData,

    /**
     * The UpdateChunkData model constructor.
     * @property {module:model/UpdateChunkData}
     */
    UpdateChunkData,

    /**
     * The UpdateChunkGroupData model constructor.
     * @property {module:model/UpdateChunkGroupData}
     */
    UpdateChunkGroupData,

    /**
     * The UpdateDatasetRequest model constructor.
     * @property {module:model/UpdateDatasetRequest}
     */
    UpdateDatasetRequest,

    /**
     * The UpdateGroupByTrackingIDData model constructor.
     * @property {module:model/UpdateGroupByTrackingIDData}
     */
    UpdateGroupByTrackingIDData,

    /**
     * The UpdateOrganizationData model constructor.
     * @property {module:model/UpdateOrganizationData}
     */
    UpdateOrganizationData,

    /**
     * The UpdateTopicData model constructor.
     * @property {module:model/UpdateTopicData}
     */
    UpdateTopicData,

    /**
     * The UpdateUserData model constructor.
     * @property {module:model/UpdateUserData}
     */
    UpdateUserData,

    /**
     * The UploadFileData model constructor.
     * @property {module:model/UploadFileData}
     */
    UploadFileData,

    /**
     * The UploadFileResult model constructor.
     * @property {module:model/UploadFileResult}
     */
    UploadFileResult,

    /**
     * The UserOrganization model constructor.
     * @property {module:model/UserOrganization}
     */
    UserOrganization,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The ChunkApi service constructor.
    * @property {module:api/ChunkApi}
    */
    ChunkApi,

    /**
    * The ChunkGroupApi service constructor.
    * @property {module:api/ChunkGroupApi}
    */
    ChunkGroupApi,

    /**
    * The DatasetApi service constructor.
    * @property {module:api/DatasetApi}
    */
    DatasetApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The FileApi service constructor.
    * @property {module:api/FileApi}
    */
    FileApi,

    /**
    * The HealthApi service constructor.
    * @property {module:api/HealthApi}
    */
    HealthApi,

    /**
    * The InvitationApi service constructor.
    * @property {module:api/InvitationApi}
    */
    InvitationApi,

    /**
    * The MessageApi service constructor.
    * @property {module:api/MessageApi}
    */
    MessageApi,

    /**
    * The OrganizationApi service constructor.
    * @property {module:api/OrganizationApi}
    */
    OrganizationApi,

    /**
    * The StripeApi service constructor.
    * @property {module:api/StripeApi}
    */
    StripeApi,

    /**
    * The TopicApi service constructor.
    * @property {module:api/TopicApi}
    */
    TopicApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
