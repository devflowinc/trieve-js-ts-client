/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DatasetDTO model module.
 * @module model/DatasetDTO
 * @version 0.5.0
 */
class DatasetDTO {
    /**
     * Constructs a new <code>DatasetDTO</code>.
     * @alias module:model/DatasetDTO
     * @param clientConfiguration {Object} 
     * @param createdAt {Date} 
     * @param id {String} 
     * @param name {String} 
     * @param organizationId {String} 
     * @param updatedAt {Date} 
     */
    constructor(clientConfiguration, createdAt, id, name, organizationId, updatedAt) { 
        
        DatasetDTO.initialize(this, clientConfiguration, createdAt, id, name, organizationId, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientConfiguration, createdAt, id, name, organizationId, updatedAt) { 
        obj['client_configuration'] = clientConfiguration;
        obj['created_at'] = createdAt;
        obj['id'] = id;
        obj['name'] = name;
        obj['organization_id'] = organizationId;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>DatasetDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatasetDTO} obj Optional instance to populate.
     * @return {module:model/DatasetDTO} The populated <code>DatasetDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatasetDTO();

            if (data.hasOwnProperty('client_configuration')) {
                obj['client_configuration'] = ApiClient.convertToType(data['client_configuration'], Object);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organization_id')) {
                obj['organization_id'] = ApiClient.convertToType(data['organization_id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatasetDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatasetDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatasetDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['organization_id'] && !(typeof data['organization_id'] === 'string' || data['organization_id'] instanceof String)) {
            throw new Error("Expected the field `organization_id` to be a primitive type in the JSON string but got " + data['organization_id']);
        }

        return true;
    }


}

DatasetDTO.RequiredProperties = ["client_configuration", "created_at", "id", "name", "organization_id", "updated_at"];

/**
 * @member {Object} client_configuration
 */
DatasetDTO.prototype['client_configuration'] = undefined;

/**
 * @member {Date} created_at
 */
DatasetDTO.prototype['created_at'] = undefined;

/**
 * @member {String} id
 */
DatasetDTO.prototype['id'] = undefined;

/**
 * @member {String} name
 */
DatasetDTO.prototype['name'] = undefined;

/**
 * @member {String} organization_id
 */
DatasetDTO.prototype['organization_id'] = undefined;

/**
 * @member {Date} updated_at
 */
DatasetDTO.prototype['updated_at'] = undefined;






export default DatasetDTO;

