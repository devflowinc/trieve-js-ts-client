/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganizationUsageCount model module.
 * @module model/OrganizationUsageCount
 * @version 0.5.0
 */
class OrganizationUsageCount {
    /**
     * Constructs a new <code>OrganizationUsageCount</code>.
     * @alias module:model/OrganizationUsageCount
     * @param datasetCount {Number} 
     * @param fileStorage {Number} 
     * @param id {String} 
     * @param messageCount {Number} 
     * @param orgId {String} 
     * @param userCount {Number} 
     */
    constructor(datasetCount, fileStorage, id, messageCount, orgId, userCount) { 
        
        OrganizationUsageCount.initialize(this, datasetCount, fileStorage, id, messageCount, orgId, userCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, datasetCount, fileStorage, id, messageCount, orgId, userCount) { 
        obj['dataset_count'] = datasetCount;
        obj['file_storage'] = fileStorage;
        obj['id'] = id;
        obj['message_count'] = messageCount;
        obj['org_id'] = orgId;
        obj['user_count'] = userCount;
    }

    /**
     * Constructs a <code>OrganizationUsageCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationUsageCount} obj Optional instance to populate.
     * @return {module:model/OrganizationUsageCount} The populated <code>OrganizationUsageCount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationUsageCount();

            if (data.hasOwnProperty('dataset_count')) {
                obj['dataset_count'] = ApiClient.convertToType(data['dataset_count'], 'Number');
            }
            if (data.hasOwnProperty('file_storage')) {
                obj['file_storage'] = ApiClient.convertToType(data['file_storage'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('message_count')) {
                obj['message_count'] = ApiClient.convertToType(data['message_count'], 'Number');
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'String');
            }
            if (data.hasOwnProperty('user_count')) {
                obj['user_count'] = ApiClient.convertToType(data['user_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationUsageCount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationUsageCount</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrganizationUsageCount.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['org_id'] && !(typeof data['org_id'] === 'string' || data['org_id'] instanceof String)) {
            throw new Error("Expected the field `org_id` to be a primitive type in the JSON string but got " + data['org_id']);
        }

        return true;
    }


}

OrganizationUsageCount.RequiredProperties = ["dataset_count", "file_storage", "id", "message_count", "org_id", "user_count"];

/**
 * @member {Number} dataset_count
 */
OrganizationUsageCount.prototype['dataset_count'] = undefined;

/**
 * @member {Number} file_storage
 */
OrganizationUsageCount.prototype['file_storage'] = undefined;

/**
 * @member {String} id
 */
OrganizationUsageCount.prototype['id'] = undefined;

/**
 * @member {Number} message_count
 */
OrganizationUsageCount.prototype['message_count'] = undefined;

/**
 * @member {String} org_id
 */
OrganizationUsageCount.prototype['org_id'] = undefined;

/**
 * @member {Number} user_count
 */
OrganizationUsageCount.prototype['user_count'] = undefined;






export default OrganizationUsageCount;

