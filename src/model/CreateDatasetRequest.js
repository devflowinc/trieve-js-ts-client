/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDatasetRequest model module.
 * @module model/CreateDatasetRequest
 * @version 0.5.0
 */
class CreateDatasetRequest {
    /**
     * Constructs a new <code>CreateDatasetRequest</code>.
     * @alias module:model/CreateDatasetRequest
     * @param clientConfiguration {Object} Client configuration for the dataset, can be arbitrary JSON. We recommend setting to `{}` to start. See docs.trieve.ai for more information or adjust with the admin dashboard.
     * @param datasetName {String} Name of the dataset. Must be unique within the organization.
     * @param organizationId {String} Organization ID that the dataset will belong to.
     * @param serverConfiguration {Object} Server configuration for the dataset, can be arbitrary JSON. We recommend setting to `{}` to start. See docs.trieve.ai for more information or adjust with the admin dashboard.
     */
    constructor(clientConfiguration, datasetName, organizationId, serverConfiguration) { 
        
        CreateDatasetRequest.initialize(this, clientConfiguration, datasetName, organizationId, serverConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientConfiguration, datasetName, organizationId, serverConfiguration) { 
        obj['client_configuration'] = clientConfiguration;
        obj['dataset_name'] = datasetName;
        obj['organization_id'] = organizationId;
        obj['server_configuration'] = serverConfiguration;
    }

    /**
     * Constructs a <code>CreateDatasetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDatasetRequest} obj Optional instance to populate.
     * @return {module:model/CreateDatasetRequest} The populated <code>CreateDatasetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDatasetRequest();

            if (data.hasOwnProperty('client_configuration')) {
                obj['client_configuration'] = ApiClient.convertToType(data['client_configuration'], Object);
            }
            if (data.hasOwnProperty('dataset_name')) {
                obj['dataset_name'] = ApiClient.convertToType(data['dataset_name'], 'String');
            }
            if (data.hasOwnProperty('organization_id')) {
                obj['organization_id'] = ApiClient.convertToType(data['organization_id'], 'String');
            }
            if (data.hasOwnProperty('server_configuration')) {
                obj['server_configuration'] = ApiClient.convertToType(data['server_configuration'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDatasetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDatasetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDatasetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataset_name'] && !(typeof data['dataset_name'] === 'string' || data['dataset_name'] instanceof String)) {
            throw new Error("Expected the field `dataset_name` to be a primitive type in the JSON string but got " + data['dataset_name']);
        }
        // ensure the json data is a string
        if (data['organization_id'] && !(typeof data['organization_id'] === 'string' || data['organization_id'] instanceof String)) {
            throw new Error("Expected the field `organization_id` to be a primitive type in the JSON string but got " + data['organization_id']);
        }

        return true;
    }


}

CreateDatasetRequest.RequiredProperties = ["client_configuration", "dataset_name", "organization_id", "server_configuration"];

/**
 * Client configuration for the dataset, can be arbitrary JSON. We recommend setting to `{}` to start. See docs.trieve.ai for more information or adjust with the admin dashboard.
 * @member {Object} client_configuration
 */
CreateDatasetRequest.prototype['client_configuration'] = undefined;

/**
 * Name of the dataset. Must be unique within the organization.
 * @member {String} dataset_name
 */
CreateDatasetRequest.prototype['dataset_name'] = undefined;

/**
 * Organization ID that the dataset will belong to.
 * @member {String} organization_id
 */
CreateDatasetRequest.prototype['organization_id'] = undefined;

/**
 * Server configuration for the dataset, can be arbitrary JSON. We recommend setting to `{}` to start. See docs.trieve.ai for more information or adjust with the admin dashboard.
 * @member {Object} server_configuration
 */
CreateDatasetRequest.prototype['server_configuration'] = undefined;






export default CreateDatasetRequest;

