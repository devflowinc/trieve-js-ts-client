/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetEventsData model module.
 * @module model/GetEventsData
 * @version 0.5.0
 */
class GetEventsData {
    /**
     * Constructs a new <code>GetEventsData</code>.
     * @alias module:model/GetEventsData
     */
    constructor() { 
        
        GetEventsData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetEventsData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetEventsData} obj Optional instance to populate.
     * @return {module:model/GetEventsData} The populated <code>GetEventsData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetEventsData();

            if (data.hasOwnProperty('event_types')) {
                obj['event_types'] = ApiClient.convertToType(data['event_types'], ['String']);
            }
            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetEventsData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetEventsData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['event_types'])) {
            throw new Error("Expected the field `event_types` to be an array in the JSON data but got " + data['event_types']);
        }

        return true;
    }


}



/**
 * The types of events to get. Any combination of file_uploaded, card_uploaded, card_action_failed, or card_updated. Leave undefined to get all events.
 * @member {Array.<String>} event_types
 */
GetEventsData.prototype['event_types'] = undefined;

/**
 * The page number to get. Default is 1.
 * @member {Number} page
 */
GetEventsData.prototype['page'] = undefined;

/**
 * The number of items per page. Default is 10.
 * @member {Number} page_size
 */
GetEventsData.prototype['page_size'] = undefined;






export default GetEventsData;

