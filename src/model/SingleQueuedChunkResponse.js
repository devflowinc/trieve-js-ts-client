/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChunkMetadata from './ChunkMetadata';

/**
 * The SingleQueuedChunkResponse model module.
 * @module model/SingleQueuedChunkResponse
 * @version 0.5.0
 */
class SingleQueuedChunkResponse {
    /**
     * Constructs a new <code>SingleQueuedChunkResponse</code>.
     * @alias module:model/SingleQueuedChunkResponse
     * @param chunkMetadata {module:model/ChunkMetadata} 
     * @param posInQueue {Number} The current position the last access item is in the queue
     */
    constructor(chunkMetadata, posInQueue) { 
        
        SingleQueuedChunkResponse.initialize(this, chunkMetadata, posInQueue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chunkMetadata, posInQueue) { 
        obj['chunk_metadata'] = chunkMetadata;
        obj['pos_in_queue'] = posInQueue;
    }

    /**
     * Constructs a <code>SingleQueuedChunkResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SingleQueuedChunkResponse} obj Optional instance to populate.
     * @return {module:model/SingleQueuedChunkResponse} The populated <code>SingleQueuedChunkResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SingleQueuedChunkResponse();

            if (data.hasOwnProperty('chunk_metadata')) {
                obj['chunk_metadata'] = ChunkMetadata.constructFromObject(data['chunk_metadata']);
            }
            if (data.hasOwnProperty('pos_in_queue')) {
                obj['pos_in_queue'] = ApiClient.convertToType(data['pos_in_queue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SingleQueuedChunkResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SingleQueuedChunkResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SingleQueuedChunkResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `chunk_metadata`
        if (data['chunk_metadata']) { // data not null
          ChunkMetadata.validateJSON(data['chunk_metadata']);
        }

        return true;
    }


}

SingleQueuedChunkResponse.RequiredProperties = ["chunk_metadata", "pos_in_queue"];

/**
 * @member {module:model/ChunkMetadata} chunk_metadata
 */
SingleQueuedChunkResponse.prototype['chunk_metadata'] = undefined;

/**
 * The current position the last access item is in the queue
 * @member {Number} pos_in_queue
 */
SingleQueuedChunkResponse.prototype['pos_in_queue'] = undefined;






export default SingleQueuedChunkResponse;

