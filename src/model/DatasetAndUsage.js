/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatasetDTO from './DatasetDTO';
import DatasetUsageCount from './DatasetUsageCount';

/**
 * The DatasetAndUsage model module.
 * @module model/DatasetAndUsage
 * @version 0.5.0
 */
class DatasetAndUsage {
    /**
     * Constructs a new <code>DatasetAndUsage</code>.
     * @alias module:model/DatasetAndUsage
     * @param dataset {module:model/DatasetDTO} 
     * @param datasetUsage {module:model/DatasetUsageCount} 
     */
    constructor(dataset, datasetUsage) { 
        
        DatasetAndUsage.initialize(this, dataset, datasetUsage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataset, datasetUsage) { 
        obj['dataset'] = dataset;
        obj['dataset_usage'] = datasetUsage;
    }

    /**
     * Constructs a <code>DatasetAndUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatasetAndUsage} obj Optional instance to populate.
     * @return {module:model/DatasetAndUsage} The populated <code>DatasetAndUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatasetAndUsage();

            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = DatasetDTO.constructFromObject(data['dataset']);
            }
            if (data.hasOwnProperty('dataset_usage')) {
                obj['dataset_usage'] = DatasetUsageCount.constructFromObject(data['dataset_usage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatasetAndUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatasetAndUsage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatasetAndUsage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `dataset`
        if (data['dataset']) { // data not null
          DatasetDTO.validateJSON(data['dataset']);
        }
        // validate the optional field `dataset_usage`
        if (data['dataset_usage']) { // data not null
          DatasetUsageCount.validateJSON(data['dataset_usage']);
        }

        return true;
    }


}

DatasetAndUsage.RequiredProperties = ["dataset", "dataset_usage"];

/**
 * @member {module:model/DatasetDTO} dataset
 */
DatasetAndUsage.prototype['dataset'] = undefined;

/**
 * @member {module:model/DatasetUsageCount} dataset_usage
 */
DatasetAndUsage.prototype['dataset_usage'] = undefined;






export default DatasetAndUsage;

