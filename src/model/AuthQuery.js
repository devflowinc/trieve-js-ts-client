/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthQuery model module.
 * @module model/AuthQuery
 * @version 0.5.0
 */
class AuthQuery {
    /**
     * Constructs a new <code>AuthQuery</code>.
     * @alias module:model/AuthQuery
     */
    constructor() { 
        
        AuthQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthQuery} obj Optional instance to populate.
     * @return {module:model/AuthQuery} The populated <code>AuthQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthQuery();

            if (data.hasOwnProperty('inv_code')) {
                obj['inv_code'] = ApiClient.convertToType(data['inv_code'], 'String');
            }
            if (data.hasOwnProperty('organization_id')) {
                obj['organization_id'] = ApiClient.convertToType(data['organization_id'], 'String');
            }
            if (data.hasOwnProperty('redirect_uri')) {
                obj['redirect_uri'] = ApiClient.convertToType(data['redirect_uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthQuery</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['inv_code'] && !(typeof data['inv_code'] === 'string' || data['inv_code'] instanceof String)) {
            throw new Error("Expected the field `inv_code` to be a primitive type in the JSON string but got " + data['inv_code']);
        }
        // ensure the json data is a string
        if (data['organization_id'] && !(typeof data['organization_id'] === 'string' || data['organization_id'] instanceof String)) {
            throw new Error("Expected the field `organization_id` to be a primitive type in the JSON string but got " + data['organization_id']);
        }
        // ensure the json data is a string
        if (data['redirect_uri'] && !(typeof data['redirect_uri'] === 'string' || data['redirect_uri'] instanceof String)) {
            throw new Error("Expected the field `redirect_uri` to be a primitive type in the JSON string but got " + data['redirect_uri']);
        }

        return true;
    }


}



/**
 * Code sent via email as a result of successful call to send_invitation
 * @member {String} inv_code
 */
AuthQuery.prototype['inv_code'] = undefined;

/**
 * ID of organization to authenticate into
 * @member {String} organization_id
 */
AuthQuery.prototype['organization_id'] = undefined;

/**
 * URL to redirect to after successful login
 * @member {String} redirect_uri
 */
AuthQuery.prototype['redirect_uri'] = undefined;






export default AuthQuery;

