/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChunkGroupAndFile from './ChunkGroupAndFile';

/**
 * The GroupData model module.
 * @module model/GroupData
 * @version 0.5.0
 */
class GroupData {
    /**
     * Constructs a new <code>GroupData</code>.
     * @alias module:model/GroupData
     * @param groups {Array.<module:model/ChunkGroupAndFile>} 
     * @param totalPages {Number} 
     */
    constructor(groups, totalPages) { 
        
        GroupData.initialize(this, groups, totalPages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groups, totalPages) { 
        obj['groups'] = groups;
        obj['total_pages'] = totalPages;
    }

    /**
     * Constructs a <code>GroupData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupData} obj Optional instance to populate.
     * @return {module:model/GroupData} The populated <code>GroupData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupData();

            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [ChunkGroupAndFile]);
            }
            if (data.hasOwnProperty('total_pages')) {
                obj['total_pages'] = ApiClient.convertToType(data['total_pages'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GroupData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                ChunkGroupAndFile.validateJSON(item);
            };
        }

        return true;
    }


}

GroupData.RequiredProperties = ["groups", "total_pages"];

/**
 * @member {Array.<module:model/ChunkGroupAndFile>} groups
 */
GroupData.prototype['groups'] = undefined;

/**
 * @member {Number} total_pages
 */
GroupData.prototype['total_pages'] = undefined;






export default GroupData;

