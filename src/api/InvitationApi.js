/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponseBody from '../model/ErrorResponseBody';
import InvitationData from '../model/InvitationData';

/**
* Invitation service.
* @module api/InvitationApi
* @version 0.5.0
*/
export default class InvitationApi {

    /**
    * Constructs a new InvitationApi. 
    * @alias module:api/InvitationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postInvitation operation.
     * @callback module:api/InvitationApi~postInvitationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send Invitation
     * Send Invitation  Invitations act as a way to invite users to join an organization. After a user is invited, they will automatically be added to the organization with the role specified in the invitation once they set their.
     * @param {String} tROrganization The organization id to use for the request
     * @param {module:model/InvitationData} invitationData JSON request payload to send an invitation
     * @param {module:api/InvitationApi~postInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postInvitation(tROrganization, invitationData, callback) {
      let postBody = invitationData;
      // verify the required parameter 'tROrganization' is set
      if (tROrganization === undefined || tROrganization === null) {
        throw new Error("Missing the required parameter 'tROrganization' when calling postInvitation");
      }
      // verify the required parameter 'invitationData' is set
      if (invitationData === undefined || invitationData === null) {
        throw new Error("Missing the required parameter 'invitationData' when calling postInvitation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'TR-Organization': tROrganization
      };
      let formParams = {
      };

      let authNames = ['ApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/invitation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
